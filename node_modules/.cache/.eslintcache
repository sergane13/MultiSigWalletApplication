[{"/home/serban/MultiSigWalletApplication/web3/src/index.js":"1","/home/serban/MultiSigWalletApplication/web3/src/App.js":"2","/home/serban/MultiSigWalletApplication/web3/src/info-contract/ContractDetails.js":"3","/home/serban/MultiSigWalletApplication/web3/src/connection-screen/ConnectionScreen.js":"4","/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/CreateTx.js":"5","/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/FundContract.js":"6","/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/ManageTx.js":"7","/home/serban/MultiSigWalletApplication/web3/src/nav-bar/NavBar.js":"8"},{"size":183,"mtime":1643013362018,"results":"9","hashOfConfig":"10"},{"size":1557,"mtime":1643111304809,"results":"11","hashOfConfig":"10"},{"size":688,"mtime":1643106171775,"results":"12","hashOfConfig":"10"},{"size":2781,"mtime":1643109205738,"results":"13","hashOfConfig":"10"},{"size":2401,"mtime":1643106329443,"results":"14","hashOfConfig":"10"},{"size":2628,"mtime":1643111802343,"results":"15","hashOfConfig":"10"},{"size":4203,"mtime":1643104777550,"results":"16","hashOfConfig":"10"},{"size":731,"mtime":1643042346427,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1chffni",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/serban/MultiSigWalletApplication/web3/src/index.js",[],"/home/serban/MultiSigWalletApplication/web3/src/App.js",["36"],"/home/serban/MultiSigWalletApplication/web3/src/info-contract/ContractDetails.js",[],"/home/serban/MultiSigWalletApplication/web3/src/connection-screen/ConnectionScreen.js",["37","38","39"],"import { useState, useEffect, useLayoutEffect } from \"react\";\nimport React from \"react\";\n\nconst ethers = require(\"ethers\");\n\nclass ConnectionScreent extends React.Component {\n  ethereum = window.ethereum;\n  state = { pass: false };\n\n  constructor(props) {\n    super(props);\n    this.ConnectWithMetamask = this.ConnectWithMetamask.bind(this);\n    this.MetamaskAccountConnection = this.MetamaskAccountConnection.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.ethereum) {\n      this.MetamaskAccountConnection();\n    } else {\n      alert(\"No connection found\");\n      this.setState({ pass: true });\n      this.render();\n    }\n\n    window.ethereum.on(\"accountsChanged\", () => {\n      this.MetamaskAccountConnection();\n    });\n  }\n\n  // Check if any acount is connected to metamask\n  async MetamaskAccountConnection() {\n    var provider = new ethers.providers.Web3Provider(this.ethereum);\n    const isMetaMaskConnected = async () => {\n      const accounts = await provider.listAccounts();\n      return accounts.length > 0;\n    };\n    await isMetaMaskConnected().then((connected) => {\n      if (connected) {\n        this.ConnectWithMetamask();\n      } else {\n        this.setState({ pass: true });\n        this.render();\n      }\n    });\n  }\n\n  // Connect with metamask if no account was detected\n  ConnectWithMetamask() {\n    this.ethereum\n      .request({ method: \"eth_requestAccounts\" })\n      .then((result) => {\n        this.props.setAccount(result[0]);\n        this.props.setConfirmation(true);\n        this.GetBalanceUser(result[0]);\n      })\n      .catch(() => {\n        this.setState({ pass: true });\n        this.render();\n      });\n  }\n\n  // Get balance of account\n  GetBalanceUser(address) {\n    this.ethereum\n      .request({ method: \"eth_getBalance\", params: [address, \"latest\"] })\n      .then((result) => {\n        this.props.setBalance(result);\n      });\n  }\n\n  render() {\n    return this.state.pass ? (\n      <div>\n        <div class=\"d-flex justify-content-center container w-50 my-5\">\n          <div class=\"card bg-dark w-75\">\n            <div class=\"card-title\">\n              <h1 class=\"font-link my-2 text-light\"> VAULT </h1>\n            </div>\n            <div class=\"card-body\">\n              <button\n                class=\"font-link btn btn-primary\"\n                onClick={this.ConnectWithMetamask}\n              >\n                {\" \"}\n                Connect Metamask{\" \"}\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"d-flex justify-content-center container w-25 text-danger font-link\">\n          Stay chill. Just connect your metamask to a random site a dude gave\n          you and everything will be ok =)\n        </div>\n      </div>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nexport default ConnectionScreent;\n",["40","41"],"/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/CreateTx.js",[],"/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/FundContract.js",["42"],"/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/ManageTx.js",["43"],"/home/serban/MultiSigWalletApplication/web3/src/nav-bar/NavBar.js",["44"],{"ruleId":"45","severity":1,"message":"46","line":2,"column":20,"nodeType":"47","messageId":"48","endLine":2,"endColumn":29},{"ruleId":"45","severity":1,"message":"49","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":18},{"ruleId":"45","severity":1,"message":"46","line":1,"column":20,"nodeType":"47","messageId":"48","endLine":1,"endColumn":29},{"ruleId":"45","severity":1,"message":"50","line":1,"column":31,"nodeType":"47","messageId":"48","endLine":1,"endColumn":46},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"45","severity":1,"message":"55","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":15},{"ruleId":"56","severity":1,"message":"57","line":19,"column":6,"nodeType":"58","endLine":19,"endColumn":19,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":7,"column":9,"nodeType":"62","endLine":7,"endColumn":43},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useLayoutEffect' is defined but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"'parse' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetContractDetails'. Either include it or remove the dependency array.","ArrayExpression",["65"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [GetContractDetails, props.value]",{"range":"68","text":"69"},[507,520],"[GetContractDetails, props.value]"]