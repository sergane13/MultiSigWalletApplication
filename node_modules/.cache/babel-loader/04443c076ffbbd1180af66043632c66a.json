{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/ConnectionScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nfunction ConnectionScreent(props) {\n  _s();\n\n  const [account, setAccount] = useState(\"0x0\");\n  const ethereum = window.ethereum;\n\n  function ConnectWithMetamask() {\n    if (ethereum) {\n      ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        console.log(result[0]);\n        setAccount(result[0]); //GetBalanceUser(result[0]);\n      });\n    } else {\n      console.log(\"No metamask\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container w-50 my-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"card-img-top img-responsive\",\n        src: \"logo512.png\",\n        alt: \"Card image cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-title my-5\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Connect Metamask \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary\",\n          children: \" Connect \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConnectionScreent, \"gfydzEFtIcYKRnkjL1AO028hqj8=\");\n\n_c = ConnectionScreent;\nexport default ConnectionScreent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectionScreent\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/ConnectionScreen.js"],"names":["useState","ethers","require","utils","ConnectionScreent","props","account","setAccount","ethereum","window","ConnectWithMetamask","request","method","then","result","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,KAAhC;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMQ,QAAQ,GAAGC,MAAM,CAACD,QAAxB;;AAEA,WAASE,mBAAT,GAA+B;AAC7B,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACG,OAAT,CAAiB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjB,EAAoDC,IAApD,CAA0DC,MAAD,IAAY;AACnEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAC,CAAD,CAAlB;AACAP,QAAAA,UAAU,CAACO,MAAM,CAAC,CAAD,CAAP,CAAV,CAFmE,CAGnE;AACD,OAJD;AAKD,KAND,MAMO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF;;AAED,sBACE;AAAK,IAAA,KAAK,EAAC,qBAAX;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AACE,QAAA,KAAK,EAAC,6BADR;AAEE,QAAA,GAAG,EAAC,aAFN;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,iBAAX;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAlCQZ,iB;;KAAAA,iB;AAoCT,eAAeA,iBAAf","sourcesContent":["import { useState } from \"react\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nfunction ConnectionScreent(props) {\n  const [account, setAccount] = useState(\"0x0\");\n\n  const ethereum = window.ethereum;\n\n  function ConnectWithMetamask() {\n    if (ethereum) {\n      ethereum.request({ method: \"eth_requestAccounts\" }).then((result) => {\n        console.log(result[0]);\n        setAccount(result[0]);\n        //GetBalanceUser(result[0]);\n      });\n    } else {\n      console.log(\"No metamask\");\n    }\n  }\n\n  return (\n    <div class=\"container w-50 my-5\">\n      <div class=\"card\">\n        <img\n          class=\"card-img-top img-responsive\"\n          src=\"logo512.png\"\n          alt=\"Card image cap\"\n        ></img>\n        <div class=\"card-body\">\n          <div class=\"card-title my-5\">\n            <h4> Connect Metamask </h4>\n          </div>\n          <button class=\"btn btn-primary\"> Connect </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ConnectionScreent;\n"]},"metadata":{},"sourceType":"module"}