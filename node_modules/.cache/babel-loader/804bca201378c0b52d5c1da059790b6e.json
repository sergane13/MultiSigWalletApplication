{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NavBar from \"./NavBar\";\nimport CreateTx from \"./CreateTx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nfunction App(props) {\n  _s();\n\n  const [account, setAccount] = useState(\"0x0\");\n  const [balance, setBalance] = useState(0);\n  const [confirmation, setConfirmation] = useState(false);\n  const ethereum = window.ethereum;\n\n  function ConnectWithMetamask() {\n    if (ethereum) {\n      ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        console.log(result[0]);\n        setAccount(result[0]);\n        GetBalanceUser(result[0]);\n      });\n    } else {\n      console.log(\"No metamask\");\n    }\n  }\n\n  function GetBalanceUser(address) {\n    ethereum.request({\n      method: \"eth_getBalance\",\n      params: [address, \"latest\"]\n    }).then(result => {\n      console.log(result);\n      setBalance(result);\n    });\n  }\n\n  async function FundContract() {\n    // const contractAbi = [\n    //   \"function getId() view returns(uint256)\",\n    //   \"function submit(address recipient, uint256 value, bytes calldata data)\",\n    //   \"function approve(uint txId)\",\n    //   \"function execute(uint txId)\",\n    //   \"function revokeApproval(uint txId)\",\n    // ];\n    const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner(); // const contract = new ethers.Contract(\n      //   addressContract,\n      //   contractAbi,\n      //   signer\n      // )\n\n      try {\n        const tx = {\n          to: addressContract,\n          value: utils.parseEther(\"3.0\"),\n          chainId: \"31337\"\n        };\n        const confirmationTx = await signer.sendTransaction(tx);\n\n        if (confirmationTx) {\n          setConfirmation(true);\n        }\n      } catch (error) {\n        console.log(\"ERRROR\");\n      }\n    }\n  }\n\n  const [addressToSend, ChangeAddress] = useState(\"\");\n  const [amountToSend, ChangeAmount] = useState(0);\n\n  async function SubmitTransaction() {\n    const contractAbi = [\"function getId() view returns(uint256)\", \"function submit(address recipient, uint256 value, bytes calldata data)\", \"function approve(uint txId)\", \"function execute(uint txId)\", \"function revokeApproval(uint txId)\"];\n    const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n    try {\n      console.log(addressToSend);\n      const submission = await contract.submit(addressToSend, amountToSend, \"0x00\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function submitAddress(value) {\n    ChangeAddress(value.target.value);\n  }\n\n  function submitValue(value) {\n    ChangeAmount(value.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      value: \"1320\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTx, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-2 border\",\n          children: \"ads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col border\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"asdbasd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"sadasjjl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"azh0rUkGRLnHWhCWjhQSjQRMXAw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/App.js"],"names":["useState","NavBar","CreateTx","ethers","require","utils","App","props","account","setAccount","balance","setBalance","confirmation","setConfirmation","ethereum","window","ConnectWithMetamask","request","method","then","result","console","log","GetBalanceUser","address","params","FundContract","addressContract","provider","providers","Web3Provider","signer","getSigner","tx","to","value","parseEther","chainId","confirmationTx","sendTransaction","error","addressToSend","ChangeAddress","amountToSend","ChangeAmount","SubmitTransaction","contractAbi","contract","Contract","submission","submit","submitAddress","target","submitValue"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NavBar from \"./NavBar\";\nimport CreateTx from \"./CreateTx\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nfunction App(props) {\n  const [account, setAccount] = useState(\"0x0\");\n  const [balance, setBalance] = useState(0);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const ethereum = window.ethereum;\n\n  function ConnectWithMetamask() {\n    if (ethereum) {\n      ethereum.request({ method: \"eth_requestAccounts\" }).then((result) => {\n        console.log(result[0]);\n        setAccount(result[0]);\n        GetBalanceUser(result[0]);\n      });\n    } else {\n      console.log(\"No metamask\");\n    }\n  }\n\n  function GetBalanceUser(address) {\n    ethereum\n      .request({ method: \"eth_getBalance\", params: [address, \"latest\"] })\n      .then((result) => {\n        console.log(result);\n        setBalance(result);\n      });\n  }\n\n  async function FundContract() {\n    // const contractAbi = [\n    //   \"function getId() view returns(uint256)\",\n    //   \"function submit(address recipient, uint256 value, bytes calldata data)\",\n    //   \"function approve(uint txId)\",\n    //   \"function execute(uint txId)\",\n    //   \"function revokeApproval(uint txId)\",\n    // ];\n\n    const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      // const contract = new ethers.Contract(\n      //   addressContract,\n      //   contractAbi,\n      //   signer\n      // )\n\n      try {\n        const tx = {\n          to: addressContract,\n          value: utils.parseEther(\"3.0\"),\n          chainId: \"31337\",\n        };\n        const confirmationTx = await signer.sendTransaction(tx);\n\n        if (confirmationTx) {\n          setConfirmation(true);\n        }\n      } catch (error) {\n        console.log(\"ERRROR\");\n      }\n    }\n  }\n\n  const [addressToSend, ChangeAddress] = useState(\"\");\n  const [amountToSend, ChangeAmount] = useState(0);\n\n  async function SubmitTransaction() {\n    const contractAbi = [\n      \"function getId() view returns(uint256)\",\n      \"function submit(address recipient, uint256 value, bytes calldata data)\",\n      \"function approve(uint txId)\",\n      \"function execute(uint txId)\",\n      \"function revokeApproval(uint txId)\",\n    ];\n\n    const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n    try {\n      console.log(addressToSend);\n      const submission = await contract.submit(\n        addressToSend,\n        amountToSend,\n        \"0x00\"\n      );\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function submitAddress(value) {\n    ChangeAddress(value.target.value);\n  }\n\n  function submitValue(value) {\n    ChangeAmount(value.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <NavBar value=\"1320\" />\n      <CreateTx />\n\n      <div class=\"container\">\n        <div class=\"row border\">\n          <div class=\"col-md-2 border\">ads</div>\n          <div class=\"col border\">\n            <div>asdbasd</div>\n            <div>sadasjjl</div>\n          </div>\n        </div>\n      </div>\n\n      {/* <h1> {props.somtheing} </h1>\n      <button class=\"btn btn-primary my-2\" onClick={ConnectWithMetamask}>\n        {\" \"}\n        Connect Wallet{\" \"}\n      </button>\n      <h2 class=\"container-md border\"> {account} </h2>\n      <h2> {balance} </h2>\n      <button onClick={FundContract}> Fund Contract </button>\n      <div class=\"card w-25 my-4\">\n        <h1 class=\"card-header\"> Yolo </h1>\n        <div class=\"card-body\">\n          Lorem Ipsum is simply dummy text of the printing and typesetting\n          industry. Lorem Ipsum has been the industry's standard dummy text ever\n          since the 1500s, when an unknown printer took a galley\n        </div>\n      </div>\n      <div>\n        <input onChange={submitAddress} placeholder=\"Enter Address\" />\n        <input onChange={submitValue} placeholder=\"Enter Amount\" />\n        <button onClick={SubmitTransaction}> SubmitTx </button>\n      </div>\n\n      <h2> {confirmation} </h2> */}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}