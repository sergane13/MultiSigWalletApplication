{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/ConnectionScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nfunction ConnectionScreent(props) {\n  _s();\n\n  const ethereum = window.ethereum;\n  useLayoutEffect(() => {\n    ConnectWithMetamask();\n  }, []);\n\n  function ConnectWithMetamask() {\n    if (ethereum) {\n      ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        props.setAccount(result[0]);\n        props.setConfirmation(true);\n        GetBalanceUser(result[0]);\n      });\n    } else {\n      alert(\"No connection found\");\n    }\n  }\n\n  function GetBalanceUser(address) {\n    ethereum.request({\n      method: \"eth_getBalance\",\n      params: [address, \"latest\"]\n    }).then(result => {\n      console.log(result);\n      props.setBalance(result);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container w-50 my-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          class: \"card-img-top img-responsive\",\n          src: \"logo512.png\",\n          alt: \"Card image cap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-title my-5\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \" Connect Metamask \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-primary\",\n            onClick: ConnectWithMetamask,\n            children: [\" \", \"Connect\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(ConnectionScreent, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\n_c = ConnectionScreent;\nexport default ConnectionScreent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectionScreent\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/ConnectionScreen.js"],"names":["useState","useEffect","useLayoutEffect","ethers","require","utils","ConnectionScreent","props","ethereum","window","ConnectWithMetamask","request","method","then","result","setAccount","setConfirmation","GetBalanceUser","alert","address","params","console","log","setBalance"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,eAA9B,QAAqD,OAArD;;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,KAAhC;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAChC,QAAMC,QAAQ,GAAGC,MAAM,CAACD,QAAxB;AAEAN,EAAAA,eAAe,CAAC,MAAM;AACpBQ,IAAAA,mBAAmB;AACpB,GAFc,EAEZ,EAFY,CAAf;;AAIA,WAASA,mBAAT,GAA+B;AAC7B,QAAIF,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACG,OAAT,CAAiB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjB,EAAoDC,IAApD,CAA0DC,MAAD,IAAY;AACnEP,QAAAA,KAAK,CAACQ,UAAN,CAAiBD,MAAM,CAAC,CAAD,CAAvB;AACAP,QAAAA,KAAK,CAACS,eAAN,CAAsB,IAAtB;AAEAC,QAAAA,cAAc,CAACH,MAAM,CAAC,CAAD,CAAP,CAAd;AACD,OALD;AAMD,KAPD,MAOO;AACLI,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;AACF;;AAED,WAASD,cAAT,CAAwBE,OAAxB,EAAiC;AAC/BX,IAAAA,QAAQ,CACLG,OADH,CACW;AAAEC,MAAAA,MAAM,EAAE,gBAAV;AAA4BQ,MAAAA,MAAM,EAAE,CAACD,OAAD,EAAU,QAAV;AAApC,KADX,EAEGN,IAFH,CAESC,MAAD,IAAY;AAChBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACAP,MAAAA,KAAK,CAACgB,UAAN,CAAiBT,MAAjB;AACD,KALH;AAOA,wBACE;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA,gCACE;AACE,UAAA,KAAK,EAAC,6BADR;AAEE,UAAA,GAAG,EAAC,aAFN;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAK,UAAA,KAAK,EAAC,WAAX;AAAA,kCACE;AAAK,YAAA,KAAK,EAAC,iBAAX;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAQ,YAAA,KAAK,EAAC,iBAAd;AAAgC,YAAA,OAAO,EAAEJ,mBAAzC;AAAA,uBACG,GADH,aAEU,GAFV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;AACF;;GAjDQJ,iB;;KAAAA,iB;AAmDT,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect, useLayoutEffect } from \"react\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nfunction ConnectionScreent(props) {\n  const ethereum = window.ethereum;\n\n  useLayoutEffect(() => {\n    ConnectWithMetamask();\n  }, []);\n\n  function ConnectWithMetamask() {\n    if (ethereum) {\n      ethereum.request({ method: \"eth_requestAccounts\" }).then((result) => {\n        props.setAccount(result[0]);\n        props.setConfirmation(true);\n\n        GetBalanceUser(result[0]);\n      });\n    } else {\n      alert(\"No connection found\");\n    }\n  }\n\n  function GetBalanceUser(address) {\n    ethereum\n      .request({ method: \"eth_getBalance\", params: [address, \"latest\"] })\n      .then((result) => {\n        console.log(result);\n        props.setBalance(result);\n      });\n\n    return (\n      <div class=\"container w-50 my-5\">\n        <div class=\"card\">\n          <img\n            class=\"card-img-top img-responsive\"\n            src=\"logo512.png\"\n            alt=\"Card image cap\"\n          ></img>\n          <div class=\"card-body\">\n            <div class=\"card-title my-5\">\n              <h4> Connect Metamask </h4>\n            </div>\n            <button class=\"btn btn-primary\" onClick={ConnectWithMetamask}>\n              {\" \"}\n              Connect{\" \"}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ConnectionScreent;\n"]},"metadata":{},"sourceType":"module"}