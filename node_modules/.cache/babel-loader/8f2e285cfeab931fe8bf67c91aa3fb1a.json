{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/FundContract.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FundContract() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row my-2\",\n      children: \" Contract holds: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: \" Contract Address: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: \" Minimum Confirmations: 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: \" Total tx number: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn btn-success\",\n        children: \"Fund Contract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FundContract;\nexport default FundContract; // const ethereum = window.ethereum;\n//   async function FundContract() {\n//     // const contractAbi = [\n//     //   \"function getId() view returns(uint256)\",\n//     //   \"function submit(address recipient, uint256 value, bytes calldata data)\",\n//     //   \"function approve(uint txId)\",\n//     //   \"function execute(uint txId)\",\n//     //   \"function revokeApproval(uint txId)\",\n//     // ];\n//     const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n//     if (ethereum) {\n//       const provider = new ethers.providers.Web3Provider(window.ethereum);\n//       const signer = provider.getSigner();\n//       // const contract = new ethers.Contract(\n//       //   addressContract,\n//       //   contractAbi,\n//       //   signer\n//       // )\n//       try {\n//         const tx = {\n//           to: addressContract,\n//           value: utils.parseEther(\"3.0\"),\n//           chainId: \"31337\",\n//         };\n//         const confirmationTx = await signer.sendTransaction(tx);\n//         if (confirmationTx) {\n//           setConfirmation(true);\n//         }\n//       } catch (error) {\n//         console.log(\"ERRROR\");\n//       }\n//     }\n//   }\n//   const [addressToSend, ChangeAddress] = useState(\"\");\n//   const [amountToSend, ChangeAmount] = useState(0);\n//   function submitAddress(value) {\n//     ChangeAddress(value.target.value);\n//   }\n//   function submitValue(value) {\n//     ChangeAmount(value.target.value);\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"FundContract\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/FundContract.js"],"names":["useState","FundContract"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,YAAT,GAAwB;AACtB,sBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,6BACE;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQA,Y;AAcT,eAAeA,YAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useState } from \"react\";\n\nfunction FundContract() {\n  return (\n    <div class=\"container\">\n      <div class=\"row my-2\"> Contract holds: </div>\n      <div class=\"row\"> Contract Address: </div>\n      <div class=\"row\"> Minimum Confirmations: 1</div>\n      <div class=\"row\"> Total tx number: </div>\n      <div class=\"row\">\n        <button class=\"btn btn-success\">Fund Contract</button>\n      </div>\n    </div>\n  );\n}\n\nexport default FundContract;\n\n// const ethereum = window.ethereum;\n\n//   async function FundContract() {\n//     // const contractAbi = [\n//     //   \"function getId() view returns(uint256)\",\n//     //   \"function submit(address recipient, uint256 value, bytes calldata data)\",\n//     //   \"function approve(uint txId)\",\n//     //   \"function execute(uint txId)\",\n//     //   \"function revokeApproval(uint txId)\",\n//     // ];\n\n//     const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n//     if (ethereum) {\n//       const provider = new ethers.providers.Web3Provider(window.ethereum);\n//       const signer = provider.getSigner();\n//       // const contract = new ethers.Contract(\n//       //   addressContract,\n//       //   contractAbi,\n//       //   signer\n//       // )\n\n//       try {\n//         const tx = {\n//           to: addressContract,\n//           value: utils.parseEther(\"3.0\"),\n//           chainId: \"31337\",\n//         };\n//         const confirmationTx = await signer.sendTransaction(tx);\n\n//         if (confirmationTx) {\n//           setConfirmation(true);\n//         }\n//       } catch (error) {\n//         console.log(\"ERRROR\");\n//       }\n//     }\n//   }\n\n//   const [addressToSend, ChangeAddress] = useState(\"\");\n//   const [amountToSend, ChangeAmount] = useState(0);\n\n//   function submitAddress(value) {\n//     ChangeAddress(value.target.value);\n//   }\n\n//   function submitValue(value) {\n//     ChangeAmount(value.target.value);\n//   }\n"]},"metadata":{},"sourceType":"module"}