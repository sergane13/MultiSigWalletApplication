{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/CreateTx.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { addressContract, contractAbi } from \"./CreatingWebConnection.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nfunction CreateTx(props) {\n  _s();\n\n  const [address, setAddress] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [trigger, setTrigger] = useState(false);\n\n  function SetAddress(event) {\n    setAddress(event.target.value);\n  }\n\n  function SetAmount(event) {\n    setAmount(event.target.value);\n  }\n\n  async function SubmitTransaction(event) {\n    event.preventDefault();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n    if (address.length < 1) {\n      alert(\"Invalid Address\");\n      return;\n    }\n\n    if (amount < 1) {\n      alert(\"Amount must be positive\");\n      return;\n    }\n\n    try {\n      const submission = await contract.submit(address, amount * 10 ** 18, \"0x00\");\n\n      if (submission) {\n        setTrigger(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"text-dark\",\n        children: \"Create Tx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: SubmitTransaction,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"form-label text-start\",\n            children: \"Address To send: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: SetAddress,\n            class: \"form-control w-75\",\n            disabled: trigger\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"form-label text-start\",\n            children: \"Amount to send: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: SetAmount,\n            class: \"form-control w-50\",\n            disabled: trigger\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"d-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            value: \"Submit\",\n            class: \"btn btn-primary my-2\",\n            children: [\" \", \"Submit Tx\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateTx, \"y2s2878iflxVCYxe5xfdTUANcZM=\");\n\n_c = CreateTx;\nexport default CreateTx;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTx\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/CreateTx.js"],"names":["useState","addressContract","contractAbi","ethers","require","utils","CreateTx","props","address","setAddress","amount","setAmount","trigger","setTrigger","SetAddress","event","target","value","SetAmount","SubmitTransaction","preventDefault","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","length","alert","submission","submit","error","console","log"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { addressContract, contractAbi } from \"./CreatingWebConnection.js\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nfunction CreateTx(props) {\n  const [address, setAddress] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [trigger, setTrigger] = useState(false);\n\n  function SetAddress(event) {\n    setAddress(event.target.value);\n  }\n\n  function SetAmount(event) {\n    setAmount(event.target.value);\n  }\n\n  async function SubmitTransaction(event) {\n    event.preventDefault();\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n    if (address.length < 1) {\n      alert(\"Invalid Address\");\n      return;\n    }\n    if (amount < 1) {\n      alert(\"Amount must be positive\");\n      return;\n    }\n\n    try {\n      const submission = await contract.submit(\n        address,\n        amount * 10 ** 18,\n        \"0x00\"\n      );\n      if (submission) {\n        setTrigger(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div class=\"card my-4\">\n      <div class=\"card-header\">\n        <h4 class=\"text-dark\">Create Tx</h4>\n      </div>\n      <div class=\"card-body\">\n        <form onSubmit={SubmitTransaction}>\n          <div class=\"form-group\">\n            <h5 class=\"form-label text-start\">Address To send: </h5>\n            <input\n              onChange={SetAddress}\n              class=\"form-control w-75\"\n              disabled={trigger}\n            ></input>\n          </div>\n          <div class=\"form-group my-4\">\n            <h5 class=\"form-label text-start\">Amount to send: </h5>\n            <input\n              onChange={SetAmount}\n              class=\"form-control w-50\"\n              disabled={trigger}\n            ></input>\n          </div>\n          <div class=\"d-flex\">\n            <button type=\"submit\" value=\"Submit\" class=\"btn btn-primary my-2\">\n              {\" \"}\n              Submit Tx\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateTx;\n"]},"metadata":{},"sourceType":"module"}