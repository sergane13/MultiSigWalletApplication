{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/FundContract.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nfunction FundContract() {\n  async function SendEthContract() {\n    const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n    const ethereum = window.ethereum;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n      try {\n        const tx = {\n          to: addressContract,\n          value: utils.parseEther(\"3.0\"),\n          chainId: \"31337\"\n        };\n        const confirmationTx = await signer.sendTransaction(tx);\n\n        if (confirmationTx) {\n          setConfirmation(true);\n        }\n      } catch (error) {\n        console.log(\"ERRROR\");\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row my-2\",\n        children: \" Eth stored: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row my-2\",\n        children: \" Minimum Confirmations: 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row my-2\",\n        children: \" Total tx number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-success\",\n          children: \"Fund Contract +4 eth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = FundContract;\nexport default FundContract; // const ethereum = window.ethereum;\n//   async function FundContract() {\n//\n//     i\n//   const [addressToSend, ChangeAddress] = useState(\"\");\n//   const [amountToSend, ChangeAmount] = useState(0);\n//   function submitAddress(value) {\n//     ChangeAddress(value.target.value);\n//   }\n//   function submitValue(value) {\n//     ChangeAmount(value.target.value);\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"FundContract\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/FundContract.js"],"names":["useState","ethers","require","utils","FundContract","SendEthContract","addressContract","ethereum","window","provider","providers","Web3Provider","signer","getSigner","contract","Contract","contractAbi","tx","to","value","parseEther","chainId","confirmationTx","sendTransaction","setConfirmation","error","console","log"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,KAAhC;;AAEA,SAASC,YAAT,GAAwB;AACtB,iBAAeC,eAAf,GAAiC;AAC/B,UAAMC,eAAe,GAAG,4CAAxB;AAEA,UAAMC,QAAQ,GAAGC,MAAM,CAACD,QAAxB;;AACA,QAAIA,QAAJ,EAAc;AACZ,YAAME,QAAQ,GAAG,IAAIR,MAAM,CAACS,SAAP,CAAiBC,YAArB,CAAkCH,MAAM,CAACD,QAAzC,CAAjB;AACA,YAAMK,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AAEA,YAAMC,QAAQ,GAAG,IAAIb,MAAM,CAACc,QAAX,CACfT,eADe,EAEfU,WAFe,EAGfJ,MAHe,CAAjB;;AAMA,UAAI;AACF,cAAMK,EAAE,GAAG;AACTC,UAAAA,EAAE,EAAEZ,eADK;AAETa,UAAAA,KAAK,EAAEhB,KAAK,CAACiB,UAAN,CAAiB,KAAjB,CAFE;AAGTC,UAAAA,OAAO,EAAE;AAHA,SAAX;AAKA,cAAMC,cAAc,GAAG,MAAMV,MAAM,CAACW,eAAP,CAAuBN,EAAvB,CAA7B;;AAEA,YAAIK,cAAJ,EAAoB;AAClBE,UAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,OAXD,CAWE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AACF;AACF;;AAED,sBACE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,4BACE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA,+BACE;AAAQ,UAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KAhDQvB,Y;AAkDT,eAAeA,YAAf,C,CAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import { useState } from \"react\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nfunction FundContract() {\n  async function SendEthContract() {\n    const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n    const ethereum = window.ethereum;\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      const contract = new ethers.Contract(\n        addressContract,\n        contractAbi,\n        signer\n      );\n\n      try {\n        const tx = {\n          to: addressContract,\n          value: utils.parseEther(\"3.0\"),\n          chainId: \"31337\",\n        };\n        const confirmationTx = await signer.sendTransaction(tx);\n\n        if (confirmationTx) {\n          setConfirmation(true);\n        }\n      } catch (error) {\n        console.log(\"ERRROR\");\n      }\n    }\n  }\n\n  return (\n    <div class=\"container\">\n      <div class=\"row my-2\">\n        <h5>Address</h5>\n        <h6>0x5FbDB2315678afecb367f032d93F642f64180aa3</h6>\n      </div>\n      <div class=\"container my-5\">\n        <div class=\"row my-2\"> Eth stored: </div>\n        <div class=\"row my-2\"> Minimum Confirmations: 1</div>\n        <div class=\"row my-2\"> Total tx number: </div>\n        <div class=\"row my-4\">\n          <button class=\"btn btn-success\">Fund Contract +4 eth</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FundContract;\n\n// const ethereum = window.ethereum;\n\n//   async function FundContract() {\n//\n\n//     i\n\n//   const [addressToSend, ChangeAddress] = useState(\"\");\n//   const [amountToSend, ChangeAmount] = useState(0);\n\n//   function submitAddress(value) {\n//     ChangeAddress(value.target.value);\n//   }\n\n//   function submitValue(value) {\n//     ChangeAmount(value.target.value);\n//   }\n"]},"metadata":{},"sourceType":"module"}