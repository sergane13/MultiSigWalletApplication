{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/ManageTx.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { addressContract, contractAbi } from \"../info-contract/ContractDetails.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nfunction ManageTx(props) {\n  _s();\n\n  const [addressSender, setAddressSender] = useState(\"0x00\");\n  const [value, setValue] = useState(0);\n  const [numberOfConfirmations, setConfirmations] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      GetContractDetails();\n    }, 1000);\n  }, [props.value]); // Get contract\n\n  function getContract() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n    return contract;\n  } // Get informations about the deployed contract\n\n\n  async function GetContractDetails() {\n    const contract = getContract();\n    const submitedTx = await contract.callStatic.getLastTx();\n\n    if (!submitedTx[2]) {\n      setAddressSender(submitedTx[0]);\n      setValue(ethers.utils.formatEther(submitedTx[1]));\n      setConfirmations(submitedTx[3].toNumber());\n    }\n\n    props.setTxSubmited(!submitedTx[2]);\n    const walletAddress = window.ethereum.selectedAddress;\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const getApprovals = await contract.callStatic.getUserApproval(getLastTxIndex.toNumber() - 1, accounts[0]);\n  } // Approve transaction\n\n\n  async function ApproveTx() {\n    const contract = getContract();\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const temp = await contract.approve(getLastTxIndex.toNumber() - 1);\n\n    if (temp) {\n      GetContractDetails();\n      alert(\"Tx aproved\");\n    }\n  } // Execute tansaction\n\n\n  async function ExecuteTx() {\n    const contract = getContract();\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const temp = await contract.execute(getLastTxIndex.toNumber() - 1);\n\n    if (temp) {\n      GetContractDetails();\n      alert(\"Tx executed\");\n    }\n  } // Revoke submited transaction\n\n\n  async function RevokeTx() {\n    const contract = getContract();\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const temp = await contract.revokeTx(getLastTxIndex.toNumber() - 1);\n\n    if (temp) {\n      GetContractDetails();\n      alert(\"Tx Revoked\");\n    }\n\n    props.setTxSubmited(false);\n  } // Revoke approval\n\n\n  async function RevokeApproval() {\n    const contract = getContract();\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const temp = await contract.revokeApproval(getLastTxIndex.toNumber() - 1);\n    temp.then(() => {\n      GetContractDetails();\n      alert(\"Approval Revoked\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"card my-4 font-link\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        class: \"text-dark\",\n        children: \"Manage Tx\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"form-label text-start\",\n          children: [\"Address: \", addressSender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"form-label text-start\",\n          children: [\"Amount: \", value, \" ETH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          class: \"form-label text-start\",\n          children: [\"Confirmations \", numberOfConfirmations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-primary my-2\",\n          onClick: ApproveTx,\n          children: [\" \", \"Approve Tx\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), numberOfConfirmations > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-success my-2 mx-3\",\n          onClick: ExecuteTx,\n          children: [\" \", \"Execute Tx\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-danger my-2 mx-1\",\n          onClick: RevokeTx,\n          children: [\" \", \"Revoke Tx\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ManageTx, \"SQ5ZjV4hFlq1WES75y9MPHKSD5M=\");\n\n_c = ManageTx;\nexport default ManageTx;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageTx\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/ManageTx.js"],"names":["useEffect","useState","addressContract","contractAbi","ethers","require","ManageTx","props","addressSender","setAddressSender","value","setValue","numberOfConfirmations","setConfirmations","setTimeout","GetContractDetails","getContract","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","submitedTx","callStatic","getLastTx","utils","formatEther","toNumber","setTxSubmited","walletAddress","selectedAddress","getLastTxIndex","getTxCount","getApprovals","getUserApproval","accounts","ApproveTx","temp","approve","alert","ExecuteTx","execute","RevokeTx","revokeTx","RevokeApproval","revokeApproval","then"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport {\n  addressContract,\n  contractAbi,\n} from \"../info-contract/ContractDetails.js\";\n\nconst ethers = require(\"ethers\");\n\nfunction ManageTx(props) {\n  const [addressSender, setAddressSender] = useState(\"0x00\");\n  const [value, setValue] = useState(0);\n  const [numberOfConfirmations, setConfirmations] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      GetContractDetails();\n    }, 1000);\n  }, [props.value]);\n\n  // Get contract\n  function getContract() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n    return contract;\n  }\n\n  // Get informations about the deployed contract\n  async function GetContractDetails() {\n    const contract = getContract();\n    const submitedTx = await contract.callStatic.getLastTx();\n\n    if (!submitedTx[2]) {\n      setAddressSender(submitedTx[0]);\n      setValue(ethers.utils.formatEther(submitedTx[1]));\n      setConfirmations(submitedTx[3].toNumber());\n    }\n    props.setTxSubmited(!submitedTx[2]);\n\n    const walletAddress = window.ethereum.selectedAddress;\n\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const getApprovals = await contract.callStatic.getUserApproval(\n      getLastTxIndex.toNumber() - 1,\n      accounts[0]\n    );\n  }\n\n  // Approve transaction\n  async function ApproveTx() {\n    const contract = getContract();\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const temp = await contract.approve(getLastTxIndex.toNumber() - 1);\n\n    if (temp) {\n      GetContractDetails();\n      alert(\"Tx aproved\");\n    }\n  }\n\n  // Execute tansaction\n  async function ExecuteTx() {\n    const contract = getContract();\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const temp = await contract.execute(getLastTxIndex.toNumber() - 1);\n\n    if (temp) {\n      GetContractDetails();\n      alert(\"Tx executed\");\n    }\n  }\n\n  // Revoke submited transaction\n  async function RevokeTx() {\n    const contract = getContract();\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const temp = await contract.revokeTx(getLastTxIndex.toNumber() - 1);\n\n    if (temp) {\n      GetContractDetails();\n      alert(\"Tx Revoked\");\n    }\n\n    props.setTxSubmited(false);\n  }\n\n  // Revoke approval\n  async function RevokeApproval() {\n    const contract = getContract();\n    const getLastTxIndex = await contract.callStatic.getTxCount();\n    const temp = await contract.revokeApproval(getLastTxIndex.toNumber() - 1);\n\n    temp.then(() => {\n      GetContractDetails();\n      alert(\"Approval Revoked\");\n    });\n  }\n\n  return (\n    <div class=\"card my-4 font-link\">\n      <div class=\"card-header\">\n        <h4 class=\"text-dark\">Manage Tx</h4>\n      </div>\n      <div class=\"card-body\">\n        <div>\n          <h5 class=\"form-label text-start\">Address: {addressSender}</h5>\n        </div>\n        <div class=\"my-4\">\n          <h5 class=\"form-label text-start\">Amount: {value} ETH</h5>\n        </div>\n        <div class=\"my-4\">\n          <h5 class=\"form-label text-start\">\n            Confirmations {numberOfConfirmations}\n          </h5>\n        </div>\n        <div class=\"d-flex\">\n          <button class=\"btn btn-primary my-2\" onClick={ApproveTx}>\n            {\" \"}\n            Approve Tx\n          </button>\n          {numberOfConfirmations > 0 ? (\n            <button class=\"btn btn-success my-2 mx-3\" onClick={ExecuteTx}>\n              {\" \"}\n              Execute Tx{\" \"}\n            </button>\n          ) : (\n            \"\"\n          )}\n          <button class=\"btn btn-danger my-2 mx-1\" onClick={RevokeTx}>\n            {\" \"}\n            Revoke Tx\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ManageTx;\n"]},"metadata":{},"sourceType":"module"}