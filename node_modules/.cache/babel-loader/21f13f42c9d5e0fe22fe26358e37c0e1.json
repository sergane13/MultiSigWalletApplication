{"ast":null,"code":"const ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nconst addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction SetConnectionWithProvider(ethereum) {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n  const contractAbi = [\"function getId() view returns(uint256)\", \"function submit(address recipient, uint256 value, bytes calldata data)\", \"function approve(uint txId)\", \"function execute(uint txId)\", \"function revokeApproval(uint txId)\"];\n  const contract = new ethers.Contract(addressContract, contractAbi, signer);\n  return contract;\n}\n\n_c = SetConnectionWithProvider;\nmodule.exports = SetConnectionWithProvider;\nmodule.exports.addressContract = addressContract;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetConnectionWithProvider\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/CreatingWebConnection.js"],"names":["ethers","require","utils","addressContract","SetConnectionWithProvider","ethereum","provider","providers","Web3Provider","signer","getSigner","contractAbi","contract","Contract","module","exports"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,KAAhC;;AAEA,MAAMC,eAAe,GAAG,4CAAxB;;AAEA,SAASC,yBAAT,CAAmCC,QAAnC,EAA6C;AAC3C,QAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCH,QAAlC,CAAjB;AACA,QAAMI,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;AAEA,QAAMC,WAAW,GAAG,CAClB,wCADkB,EAElB,wEAFkB,EAGlB,6BAHkB,EAIlB,6BAJkB,EAKlB,oCALkB,CAApB;AAQA,QAAMC,QAAQ,GAAG,IAAIZ,MAAM,CAACa,QAAX,CAAoBV,eAApB,EAAqCQ,WAArC,EAAkDF,MAAlD,CAAjB;AAEA,SAAOG,QAAP;AACD;;KAfQR,yB;AAiBTU,MAAM,CAACC,OAAP,GAAiBX,yBAAjB;AACAU,MAAM,CAACC,OAAP,CAAeZ,eAAf,GAAiCA,eAAjC","sourcesContent":["const ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nconst addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction SetConnectionWithProvider(ethereum) {\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n\n  const contractAbi = [\n    \"function getId() view returns(uint256)\",\n    \"function submit(address recipient, uint256 value, bytes calldata data)\",\n    \"function approve(uint txId)\",\n    \"function execute(uint txId)\",\n    \"function revokeApproval(uint txId)\",\n  ];\n\n  const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n  return contract;\n}\n\nmodule.exports = SetConnectionWithProvider;\nmodule.exports.addressContract = addressContract;\n"]},"metadata":{},"sourceType":"module"}