{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NavBar from \"./NavBar\";\nimport CreateTx from \"./CreateTx\";\nimport ManageTx from \"./ManageTx\";\nimport ConnectionScreent from \"./ConnectionScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nfunction App(props) {\n  _s();\n\n  // details about the account\n  const [account, setAccount] = useState(\"0x0\");\n  const [balance, setBalance] = useState(0);\n  const [confirmation, setConfirmation] = useState(false);\n  const ethereum = window.ethereum;\n\n  async function FundContract() {\n    // const contractAbi = [\n    //   \"function getId() view returns(uint256)\",\n    //   \"function submit(address recipient, uint256 value, bytes calldata data)\",\n    //   \"function approve(uint txId)\",\n    //   \"function execute(uint txId)\",\n    //   \"function revokeApproval(uint txId)\",\n    // ];\n    const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner(); // const contract = new ethers.Contract(\n      //   addressContract,\n      //   contractAbi,\n      //   signer\n      // )\n\n      try {\n        const tx = {\n          to: addressContract,\n          value: utils.parseEther(\"3.0\"),\n          chainId: \"31337\"\n        };\n        const confirmationTx = await signer.sendTransaction(tx);\n\n        if (confirmationTx) {\n          setConfirmation(true);\n        }\n      } catch (error) {\n        console.log(\"ERRROR\");\n      }\n    }\n  }\n\n  const [addressToSend, ChangeAddress] = useState(\"\");\n  const [amountToSend, ChangeAmount] = useState(0);\n\n  function submitAddress(value) {\n    ChangeAddress(value.target.value);\n  }\n\n  function submitValue(value) {\n    ChangeAmount(value.target.value);\n  }\n\n  return confirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      balance: balance,\n      address: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-2 border\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Last tX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col my-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container-sm\",\n            children: [/*#__PURE__*/_jsxDEV(CreateTx, {\n              trigger: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ManageTx, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      balance: \"0\",\n      address: \"0x0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionScreent, {\n      setAccount: setAccount,\n      setConfirmation: setConfirmation,\n      setBalance: setBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"azh0rUkGRLnHWhCWjhQSjQRMXAw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/App.js"],"names":["useState","NavBar","CreateTx","ManageTx","ConnectionScreent","ethers","require","utils","App","props","account","setAccount","balance","setBalance","confirmation","setConfirmation","ethereum","window","FundContract","addressContract","provider","providers","Web3Provider","signer","getSigner","tx","to","value","parseEther","chainId","confirmationTx","sendTransaction","error","console","log","addressToSend","ChangeAddress","amountToSend","ChangeAmount","submitAddress","target","submitValue"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NavBar from \"./NavBar\";\nimport CreateTx from \"./CreateTx\";\nimport ManageTx from \"./ManageTx\";\nimport ConnectionScreent from \"./ConnectionScreen\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nfunction App(props) {\n  // details about the account\n  const [account, setAccount] = useState(\"0x0\");\n  const [balance, setBalance] = useState(0);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const ethereum = window.ethereum;\n\n  async function FundContract() {\n    // const contractAbi = [\n    //   \"function getId() view returns(uint256)\",\n    //   \"function submit(address recipient, uint256 value, bytes calldata data)\",\n    //   \"function approve(uint txId)\",\n    //   \"function execute(uint txId)\",\n    //   \"function revokeApproval(uint txId)\",\n    // ];\n\n    const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      // const contract = new ethers.Contract(\n      //   addressContract,\n      //   contractAbi,\n      //   signer\n      // )\n\n      try {\n        const tx = {\n          to: addressContract,\n          value: utils.parseEther(\"3.0\"),\n          chainId: \"31337\",\n        };\n        const confirmationTx = await signer.sendTransaction(tx);\n\n        if (confirmationTx) {\n          setConfirmation(true);\n        }\n      } catch (error) {\n        console.log(\"ERRROR\");\n      }\n    }\n  }\n\n  const [addressToSend, ChangeAddress] = useState(\"\");\n  const [amountToSend, ChangeAmount] = useState(0);\n\n  function submitAddress(value) {\n    ChangeAddress(value.target.value);\n  }\n\n  function submitValue(value) {\n    ChangeAmount(value.target.value);\n  }\n\n  return confirmation ? (\n    <div className=\"App\">\n      <NavBar balance={balance} address={account} />\n      <div class=\"container my-4\">\n        <div class=\"row border\">\n          <div class=\"col-md-2 border\">\n            <h1>Last tX</h1>\n          </div>\n          <div class=\"col my-2\">\n            <div class=\"container-sm\">\n              <CreateTx trigger={false} />\n              <ManageTx />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"App\">\n      <NavBar balance=\"0\" address=\"0x0\" />\n      <ConnectionScreent\n        setAccount={setAccount}\n        setConfirmation={setConfirmation}\n        setBalance={setBalance}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}