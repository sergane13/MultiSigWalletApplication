{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NavBar from \"./NavBar\";\nimport CreateTx from \"./CreateTx\";\nimport ManageTx from \"./ManageTx\";\nimport ConnectionScreent from \"./ConnectionScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nfunction App(props) {\n  _s();\n\n  // details about the account\n  const [account, setAccount] = useState(\"0x0\");\n  const [balance, setBalance] = useState(0);\n  const [confirmation, setConfirmation] = useState(false);\n  const ethereum = window.ethereum;\n  useEffect(() => {\n    if (ethereum) {\n      ethereum.request({\n        method: \"eth_requestAccounts\"\n      }).then(result => {\n        console.log(result[0]);\n        setAccount(result[0]);\n        setConfirmation(true);\n        GetBalanceUser(result[0]);\n      });\n    } else {\n      alert(\"No connection found\");\n      console.log(\"No metamask\");\n    }\n  }, []);\n  return confirmation ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      balance: balance,\n      address: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container my-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-2 border\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Last tX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col my-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"container-sm\",\n            children: [/*#__PURE__*/_jsxDEV(CreateTx, {\n              trigger: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ManageTx, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      balance: \"0\",\n      address: \"0x0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectionScreent, {\n      setAccount: setAccount,\n      setConfirmation: setConfirmation,\n      setBalance: setBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WQInEF7OvLFQrIA/SUZxuTANAH8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/App.js"],"names":["useState","useEffect","NavBar","CreateTx","ManageTx","ConnectionScreent","ethers","require","utils","App","props","account","setAccount","balance","setBalance","confirmation","setConfirmation","ethereum","window","request","method","then","result","console","log","GetBalanceUser","alert"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,iBAAP,MAA8B,oBAA9B;;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,KAAhC;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,KAAD,CAAhD;AAEA,QAAMiB,QAAQ,GAAGC,MAAM,CAACD,QAAxB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACE,OAAT,CAAiB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAjB,EAAoDC,IAApD,CAA0DC,MAAD,IAAY;AACnEC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAAC,CAAD,CAAlB;AACAV,QAAAA,UAAU,CAACU,MAAM,CAAC,CAAD,CAAP,CAAV;AACAN,QAAAA,eAAe,CAAC,IAAD,CAAf;AAEAS,QAAAA,cAAc,CAACH,MAAM,CAAC,CAAD,CAAP,CAAd;AACD,OAND;AAOD,KARD,MAQO;AACLI,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF,GAbQ,EAaN,EAbM,CAAT;AAeA,SAAOT,YAAY,gBACjB;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEF,OAAjB;AAA0B,MAAA,OAAO,EAAEF;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,iBAAX;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,KAAK,EAAC,UAAX;AAAA,iCACE;AAAK,YAAA,KAAK,EAAC,cAAX;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB,gBAkBjB;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,GAAhB;AAAoB,MAAA,OAAO,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,iBAAD;AACE,MAAA,UAAU,EAAEC,UADd;AAEE,MAAA,eAAe,EAAEI,eAFnB;AAGE,MAAA,UAAU,EAAEF;AAHd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAlBF;AA2BD;;GAlDQL,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport NavBar from \"./NavBar\";\nimport CreateTx from \"./CreateTx\";\nimport ManageTx from \"./ManageTx\";\nimport ConnectionScreent from \"./ConnectionScreen\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nfunction App(props) {\n  // details about the account\n  const [account, setAccount] = useState(\"0x0\");\n  const [balance, setBalance] = useState(0);\n  const [confirmation, setConfirmation] = useState(false);\n\n  const ethereum = window.ethereum;\n\n  useEffect(() => {\n    if (ethereum) {\n      ethereum.request({ method: \"eth_requestAccounts\" }).then((result) => {\n        console.log(result[0]);\n        setAccount(result[0]);\n        setConfirmation(true);\n\n        GetBalanceUser(result[0]);\n      });\n    } else {\n      alert(\"No connection found\");\n      console.log(\"No metamask\");\n    }\n  }, []);\n\n  return confirmation ? (\n    <div className=\"App\">\n      <NavBar balance={balance} address={account} />\n      <div class=\"container my-4\">\n        <div class=\"row border\">\n          <div class=\"col-md-2 border\">\n            <h1>Last tX</h1>\n          </div>\n          <div class=\"col my-2\">\n            <div class=\"container-sm\">\n              <CreateTx trigger={false} />\n              <ManageTx />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"App\">\n      <NavBar balance=\"0\" address=\"0x0\" />\n      <ConnectionScreent\n        setAccount={setAccount}\n        setConfirmation={setConfirmation}\n        setBalance={setBalance}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}