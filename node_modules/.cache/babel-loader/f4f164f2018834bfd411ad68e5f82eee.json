{"ast":null,"code":"var _jsxFileName = \"/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/FundContract.js\",\n    _s = $RefreshSig$();\n\nimport { parse } from \"@ethersproject/transactions\";\nimport { useState, useEffect } from \"react\";\nimport { addressContract, contractAbi } from \"../info-contract/ContractDetails.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nfunction FundContract(props) {\n  _s();\n\n  const [balance, setBalance] = useState(0.0);\n  const [txCount, setTxCount] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      GetBalance();\n      console.log(\"avion\");\n    }, 1000);\n  });\n\n  async function GetBalance() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const balanceContract = await provider.getBalance(addressContract);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n    const nrTx = await contract.callStatic.getTxCount();\n    setTxCount(nrTx.toNumber());\n    setBalance(ethers.utils.formatEther(balanceContract));\n  } // fund contract with +4 eth\n\n\n  async function SendEthContract() {\n    if (window.ethereum) {\n      try {\n        const tx = {\n          to: addressContract,\n          value: utils.parseEther(\"4.0\"),\n          chainId: \"31337\"\n        };\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        await signer.sendTransaction(tx).then(() => {\n          alert(\"Contract Funded\");\n          GetBalance();\n        });\n      } catch (error) {\n        alert(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container font-link\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row my-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: addressContract\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row my-2\",\n        children: [\" Eth stored: \", balance, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row my-2\",\n        children: \" Minimum Confirmations: 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row my-2\",\n        children: [\" Total transactions: \", txCount, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-success\",\n          onClick: SendEthContract,\n          children: \"Fund Contract +4 eth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FundContract, \"PSDCZukyZP+XMQ4GUzmrzYzHmJ8=\");\n\n_c = FundContract;\nexport default FundContract;\n\nvar _c;\n\n$RefreshReg$(_c, \"FundContract\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/contract-interactions/FundContract.js"],"names":["parse","useState","useEffect","addressContract","contractAbi","ethers","require","utils","FundContract","props","balance","setBalance","txCount","setTxCount","setTimeout","GetBalance","console","log","provider","providers","Web3Provider","window","ethereum","balanceContract","getBalance","signer","getSigner","contract","Contract","nrTx","callStatic","getTxCount","toNumber","formatEther","SendEthContract","tx","to","value","parseEther","chainId","sendTransaction","then","alert","error"],"mappings":"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","sourcesContent":["import { parse } from \"@ethersproject/transactions\";\nimport { useState, useEffect } from \"react\";\nimport {\n  addressContract,\n  contractAbi,\n} from \"../info-contract/ContractDetails.js\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nfunction FundContract(props) {\n  const [balance, setBalance] = useState(0.0);\n  const [txCount, setTxCount] = useState(0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      GetBalance();\n      console.log(\"avion\");\n    }, 1000);\n  });\n\n  async function GetBalance() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const balanceContract = await provider.getBalance(addressContract);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n    const nrTx = await contract.callStatic.getTxCount();\n\n    setTxCount(nrTx.toNumber());\n    setBalance(ethers.utils.formatEther(balanceContract));\n  }\n\n  // fund contract with +4 eth\n  async function SendEthContract() {\n    if (window.ethereum) {\n      try {\n        const tx = {\n          to: addressContract,\n          value: utils.parseEther(\"4.0\"),\n          chainId: \"31337\",\n        };\n\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        await signer.sendTransaction(tx).then(() => {\n          alert(\"Contract Funded\");\n          GetBalance();\n        });\n      } catch (error) {\n        alert(error);\n      }\n    }\n  }\n\n  return (\n    <div class=\"container font-link\">\n      <div class=\"row my-2\">\n        <h5>Address</h5>\n        <h6>{addressContract}</h6>\n      </div>\n      <div class=\"container my-5\">\n        <div class=\"row my-2\"> Eth stored: {balance} </div>\n        <div class=\"row my-2\"> Minimum Confirmations: 1</div>\n        <div class=\"row my-2\"> Total transactions: {txCount} </div>\n        <div class=\"row my-4\">\n          <button class=\"btn btn-success\" onClick={SendEthContract}>\n            Fund Contract +4 eth\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FundContract;\n"]},"metadata":{},"sourceType":"module"}