{"ast":null,"code":"const ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nexport const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nexport const contractAbi = [\"function getId() view returns(uint256)\", \"function submit(address recipient, uint256 value, bytes calldata data)\", \"function approve(uint txId)\", \"function execute(uint txId)\", \"function revokeApproval(uint txId)\"];\nexport const signer = () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  return provider.getSigner();\n};\nexport const contract = () => {\n  const signer = signer();\n  const contract = new ethers.Contract(addressContract, contractAbi, signer);\n  return contract;\n};","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/CreatingWebConnection.js"],"names":["ethers","require","utils","addressContract","contractAbi","signer","provider","providers","Web3Provider","window","ethereum","getSigner","contract","Contract"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,KAAhC;;AAEA,OAAO,MAAMC,eAAe,GAAG,4CAAxB;AAEP,OAAO,MAAMC,WAAW,GAAG,CACzB,wCADyB,EAEzB,wEAFyB,EAGzB,6BAHyB,EAIzB,6BAJyB,EAKzB,oCALyB,CAApB;AAQP,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,QAAMC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,SAAOJ,QAAQ,CAACK,SAAT,EAAP;AACD,CAHM;AAKP,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,QAAMP,MAAM,GAAGA,MAAM,EAArB;AACA,QAAMO,QAAQ,GAAG,IAAIZ,MAAM,CAACa,QAAX,CAAoBV,eAApB,EAAqCC,WAArC,EAAkDC,MAAlD,CAAjB;AACA,SAAOO,QAAP;AACD,CAJM","sourcesContent":["const ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nexport const addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nexport const contractAbi = [\n  \"function getId() view returns(uint256)\",\n  \"function submit(address recipient, uint256 value, bytes calldata data)\",\n  \"function approve(uint txId)\",\n  \"function execute(uint txId)\",\n  \"function revokeApproval(uint txId)\",\n];\n\nexport const signer = () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  return provider.getSigner();\n};\n\nexport const contract = () => {\n  const signer = signer();\n  const contract = new ethers.Contract(addressContract, contractAbi, signer);\n  return contract;\n};\n"]},"metadata":{},"sourceType":"module"}