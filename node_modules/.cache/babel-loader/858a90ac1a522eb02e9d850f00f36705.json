{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\n\nconst ethers = require(\"ethers\");\n\nconst utils = require(\"ethers\").utils;\n\nconst addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction SetConnectionWithProvider(props) {\n  _s();\n\n  useEffect(() => {\n    SetConnection();\n  }, []);\n\n  function SetConnection() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    props.setSigner(signer);\n    props.setAddress(addressContract);\n    const contractAbi = [\"function getId() view returns(uint256)\", \"function submit(address recipient, uint256 value, bytes calldata data)\", \"function approve(uint txId)\", \"function execute(uint txId)\", \"function revokeApproval(uint txId)\"];\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n    props.setContract(contract);\n  }\n\n  return \"\";\n}\n\n_s(SetConnectionWithProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SetConnectionWithProvider;\nexport default SetConnectionWithProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetConnectionWithProvider\");","map":{"version":3,"sources":["/home/serban/MultiSigWalletApplication/web3/src/CreatingWebConnection.js"],"names":["useEffect","ethers","require","utils","addressContract","SetConnectionWithProvider","props","SetConnection","provider","providers","Web3Provider","window","ethereum","signer","getSigner","setSigner","setAddress","contractAbi","contract","Contract","setContract"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,KAAhC;;AAEA,MAAMC,eAAe,GAAG,4CAAxB;;AAEA,SAASC,yBAAT,CAAmCC,KAAnC,EAA0C;AAAA;;AACxCN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,aAAT,GAAyB;AACvB,UAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;AACA,UAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAT,EAAf;AAEAR,IAAAA,KAAK,CAACS,SAAN,CAAgBF,MAAhB;AACAP,IAAAA,KAAK,CAACU,UAAN,CAAiBZ,eAAjB;AAEA,UAAMa,WAAW,GAAG,CAClB,wCADkB,EAElB,wEAFkB,EAGlB,6BAHkB,EAIlB,6BAJkB,EAKlB,oCALkB,CAApB;AAQA,UAAMC,QAAQ,GAAG,IAAIjB,MAAM,CAACkB,QAAX,CAAoBf,eAApB,EAAqCa,WAArC,EAAkDJ,MAAlD,CAAjB;AAEAP,IAAAA,KAAK,CAACc,WAAN,CAAkBF,QAAlB;AACD;;AAED,SAAO,EAAP;AACD;;GA1BQb,yB;;KAAAA,yB;AA4BT,eAAeA,yBAAf","sourcesContent":["import { useEffect } from \"react\";\n\nconst ethers = require(\"ethers\");\nconst utils = require(\"ethers\").utils;\n\nconst addressContract = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction SetConnectionWithProvider(props) {\n  useEffect(() => {\n    SetConnection();\n  }, []);\n\n  function SetConnection() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n\n    props.setSigner(signer);\n    props.setAddress(addressContract);\n\n    const contractAbi = [\n      \"function getId() view returns(uint256)\",\n      \"function submit(address recipient, uint256 value, bytes calldata data)\",\n      \"function approve(uint txId)\",\n      \"function execute(uint txId)\",\n      \"function revokeApproval(uint txId)\",\n    ];\n\n    const contract = new ethers.Contract(addressContract, contractAbi, signer);\n\n    props.setContract(contract);\n  }\n\n  return \"\";\n}\n\nexport default SetConnectionWithProvider;\n"]},"metadata":{},"sourceType":"module"}